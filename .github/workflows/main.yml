name: Publish Docker image

on:
  push:
    branches: ['main']


env:
  PROJECT_ID: ${{secrets.GKE_PROJECT_ID}}
  GKE_CLUSTER: autopilot-cluster-1
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: deployment-nodeapp
  IMAGE: nodeapp
  TAG: latest

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build Docker image
        run: docker build -t ${{env.IMAGE}} .

      - name: Push Docker image
        run: |-
          docker tag ${{env.IMAGE}} ${{secrets.DOCKER_USERNAME}}/${{env.IMAGE}}:${{github.sha}}
          docker push ${{secrets.DOCKER_USERNAME}}/${{env.IMAGE}}:${{github.sha}}

      - name: Setup Google Cloud CLI
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          service_account_key: ${{secrets.GKE_SERVICE_ACCOUNT_KEY}}
          project_id: ${{secrets.GKE_PROJECT_ID}}

      - name: Get GKE Credentials
        run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      
      - name: Install Auth Plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Deploy to Kubernetes
        run: |-
          kubectl create deployment $0{{env.DEPLOYMENT_NAME}} --image=${{secrets.DOCKER_USERNAME}}/${{env.IMAGE}}:${{github.sha}}
          kubectl apply -f deployment.yml

      - name: Wait for deployments to be ready
        run: |
          while [[ $(kubectl get deployments --output 'jsonpath={.items[*].status.readyReplicas}' | tr ' ' '\n' | paste -sd+ | bc) -ne 1 ]]; do
            echo "Waiting for deployments to be ready..."
            sleep 10
          done

      - name: Apply Service
        run: kubectl apply -f service.yml    